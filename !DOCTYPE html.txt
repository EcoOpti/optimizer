<!DOCTYPE html>
<html lang="he">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Viral Pin 2.0: Your Personalized Savings</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700;800;900&display=swap');
        
        :root {
            --pinterest-red: #E60023;
            --shock-yellow: #FFD700;
            --money-green: #00FF88;
            --danger-red: #FF1744;
            --viral-purple: #8E44AD;
            --tiktok-pink: #FF0050;
            --white: #FFFFFF;
            --black: #000000;
        }

        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            background: linear-gradient(45deg, #FF6B6B, #4ECDC4, #45B7D1, #96CEB4);
            background-size: 400% 400%;
            animation: gradientShift 15s ease infinite;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        #phone-container {
            width: 350px;
            height: 600px;
            background: var(--white);
            border-radius: 30px;
            box-shadow: 0 30px 60px rgba(0,0,0,0.3);
            overflow: hidden;
            position: relative;
            border: 5px solid var(--black);
        }

        .scene {
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            box-sizing: border-box;
            opacity: 0;
            transform: scale(0.9);
            transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            visibility: hidden;
        }

        .scene.active {
            opacity: 1;
            transform: scale(1);
            visibility: visible;
        }

        /* --- Scene 1: VIRAL HOOK --- */
        #hook {
            background: linear-gradient(135deg, var(--danger-red), var(--pinterest-red));
            color: var(--white);
            text-align: center;
        }
        .hook-title {
            font-size: 32px; font-weight: 900; line-height: 1.1;
            margin-bottom: 20px; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
            animation: shake 0.5s 3 ease-in-out;
        }
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-3px) rotate(-1deg); }
            75% { transform: translateX(3px) rotate(1deg); }
        }
        .shock-stat {
            font-size: 48px; font-weight: 900; color: var(--shock-yellow);
            text-shadow: 3px 3px 6px rgba(0,0,0,0.7); margin: 15px 0;
            animation: pulse 1s infinite;
        }
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }
        .hook-subtitle {
            font-size: 18px; font-weight: 600; background: var(--shock-yellow);
            color: var(--black); padding: 10px 15px; border-radius: 25px;
            margin-top: 15px;
        }

        /* --- Scene 2: PROBLEM REVEAL --- */
        #problem {
            background: linear-gradient(135deg, var(--black), #333);
            color: var(--white); text-align: center;
        }
        .problem-title {
            font-size: 28px; font-weight: 800; color: var(--danger-red);
            margin-bottom: 30px; text-transform: uppercase;
        }
        .waste-viz {
            width: 150px; height: 150px; border: 4px dashed var(--danger-red);
            border-radius: 15px; margin: 20px auto; display:flex; justify-content: center; align-items: center;
            background: rgba(255,23,68,0.1); animation: moneyFly 2s ease-out infinite;
        }
        .waste-viz .product {
            width: 20%; height: 20%; background: var(--viral-purple); border-radius: 5px;
            box-shadow: 0 0 10px var(--viral-purple);
        }
        @keyframes moneyFly {
             0% { transform: translateY(0) rotate(0); }
             50% { transform: translateY(-15px) rotate(3deg); }
             100% { transform: translateY(0) rotate(0); }
        }
        .drain-amount {
            font-size: 36px; font-weight: 900; color: var(--danger-red);
            margin-top: 20px;
        }


        /* --- Scene 3: SOLUTION MAGIC (INTERACTIVE) --- */
        #solution {
            background: linear-gradient(135deg, var(--viral-purple), var(--tiktok-pink));
            color: var(--white);
        }
        .solution-title {
            font-size: 26px; font-weight: 800; text-align: center;
            margin-bottom: 30px; text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
        .magic-interface {
            background: var(--white); padding: 25px; border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.3); width: 95%;
        }
        .input-label {
            font-size: 14px; font-weight: 700; color: var(--black); text-align: left; margin-bottom: 5px;
        }
        .input-field {
            width: 100%; padding: 12px; border: 3px solid var(--viral-purple);
            border-radius: 15px; font-size: 16px; font-weight: 600;
            margin-bottom: 15px; text-align: center; color: var(--black); box-sizing: border-box;
        }
        .magic-button {
            width: 100%; padding: 18px;
            background: linear-gradient(45deg, var(--money-green), #00CC66);
            color: var(--black); border: none; border-radius: 15px;
            font-size: 20px; font-weight: 900; cursor: pointer;
            box-shadow: 0 10px 20px rgba(0,255,136,0.4);
            animation: glow 1.5s infinite alternate; transition: transform 0.1s ease;
        }
        .magic-button:active { transform: scale(0.95); }
        @keyframes glow {
            from { box-shadow: 0 8px 15px rgba(0,255,136,0.4); }
            to { box-shadow: 0 12px 25px rgba(0,255,136,0.8); }
        }

        /* --- Scene 4: TRANSFORMATION (PERSONALIZED) --- */
        #transformation {
            background: linear-gradient(135deg, var(--money-green), #00FF44);
            color: var(--black); text-align: center;
        }
        .transform-title {
            font-size: 28px; font-weight: 900; margin-bottom: 20px; text-transform: uppercase;
        }
        .before-after { display: flex; gap: 15px; margin: 20px 0; width: 100%; }
        .comparison-box { flex: 1; text-align: center; }
        .comparison-label { font-size: 18px; font-weight: 800; margin-bottom: 10px; }
        .package-viz {
            width: 100px; height: 100px; border: 3px dashed var(--black);
            margin: 0 auto 10px; display: flex; justify-content: center;
            align-items: center; border-radius: 10px; font-weight: 700; position: relative;
        }
        .package-viz .inner-product {
            background: #8E44AD; border-radius: 3px;
        }
        .package-viz.optimized {
            border-style: solid; background: rgba(255,255,255,0.3); border-color: var(--viral-purple);
            animation: buildBox 0.7s cubic-bezier(0.34, 1.56, 0.64, 1);
        }
        @keyframes buildBox {
            from { transform: scale(0.5); opacity: 0; }
            to { transform: scale(1); opacity: 1; }
        }
        .savings-explosion {
            font-size: 38px; font-weight: 900; color: var(--viral-purple);
            margin: 15px 0; animation: explode 1s infinite;
        }
        @keyframes explode {
            0%, 100% { transform: scale(1) rotate(0deg); }
            50% { transform: scale(1.15) rotate(4deg); }
        }


        /* --- Scene 5: VIRAL CTA (PERSONALIZED) --- */
        #cta {
            background: linear-gradient(135deg, var(--pinterest-red), var(--danger-red));
            color: var(--white); text-align: center;
        }
        .cta-hook {
            font-size: 28px; font-weight: 900; margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
        .urgency-text {
            font-size: 18px; font-weight: 700; background: var(--shock-yellow);
            color: var(--black); padding: 10px 20px; border-radius: 25px;
            margin-bottom: 25px; animation: flash 1s infinite;
        }
        @keyframes flash {
            50% { background: var(--white); }
        }
        .viral-button {
            padding: 18px 30px; font-size: 22px; font-weight: 900;
            background: var(--money-green); color: var(--black);
            border: none; border-radius: 50px; cursor: pointer;
            box-shadow: 0 15px 30px rgba(0,255,136,0.5);
            animation: megaPulse 1s infinite; margin-bottom: 20px;
        }
        @keyframes megaPulse {
            50% { transform: scale(1.1); box-shadow: 0 20px 40px rgba(0,255,136,0.8); }
        }
        .site-url {
            font-size: 24px; font-weight: 800; color: var(--shock-yellow);
            margin-bottom: 10px;
        }
        .pin-instruction {
            font-size: 16px; font-weight: 600; background: rgba(255,255,255,0.2);
            padding: 8px 15px; border-radius: 20px;
        }

    </style>
</head>
<body>
    <div id="phone-container">
        
        <div id="hook" class="scene">
            <div class="hook-title">This Packaging Hack<br>Saves Businesses...</div>
            <div class="shock-stat">$10K-$100K</div>
            <div style="font-size: 20px; font-weight: 700;">FIND OUT YOUR SAVINGS!</div>
            <div class="hook-subtitle">How much are YOU overspending?</div>
        </div>

        <div id="problem" class="scene">
            <div class="problem-title">Every MM of Wasted<br>Space Costs You 💰</div>
            <div class="waste-viz">
                <div class="product"></div>
            </div>
            <div class="drain-amount">Stop Shipping Air!</div>
            <div style="font-size: 16px; margin-top: 10px;">🔥 73% of packaging can be wasted space</div>
        </div>

        <div id="solution" class="scene">
            <div class="solution-title">🤖 Let AI Find Your<br>Perfect Box in 3 Seconds!</div>
            <div class="magic-interface">
                <label class="input-label">Enter YOUR product size (cm):</label>
                <input class="input-field" id="productL" type="number" placeholder="Length (e.g., 8)">
                <input class="input-field" id="productW" type="number" placeholder="Width (e.g., 8)">
                <input class="input-field" id="productH" type="number" placeholder="Height (e.g., 10)">
                <button class="magic-button" id="magicBtn">✨ CALCULATE MY SAVINGS ✨</button>
            </div>
        </div>

        <div id="transformation" class="scene">
            <div class="transform-title">YOUR PERSONAL<br>RESULTS ARE IN! 🤯</div>
            <div class="before-after">
                <div class="comparison-box">
                    <div class="comparison-label">BEFORE</div>
                    <div class="package-viz">
                        <div class="inner-product" id="before-product-viz"></div>
                    </div>
                    <div style="font-size: 14px; font-weight: 700;" id="oldBoxDim">15x15x15cm</div>
                    <div style="font-size: 14px; font-weight: 700; color: #FF1744;" id="wastedPercentage">65% WASTE</div>
                </div>
                <div class="comparison-box">
                    <div class="comparison-label">AI OPTIMIZED</div>
                    <div class="package-viz optimized">
                         <div class="inner-product" id="after-product-viz"></div>
                    </div>
                    <div style="font-size: 14px; font-weight: 700;" id="newBoxDim">9x9x11cm</div>
                    <div style="font-size: 14px; font-weight: 700; color: #8E44AD;">95% EFFICIENT</div>
                </div>
            </div>
            <div class="savings-explosion">
                💰 SAVE <span id="userSavings">$17,482</span>/YEAR! 💰
            </div>
        </div>

        <div id="cta" class="scene">
            <div class="cta-hook">You Just Found<br><span id="cta-savings" style="color: var(--shock-yellow);">$17,482</span> in Savings!</div>
            <div class="urgency-text">⏰ LIMITED FREE ACCESS TO THE TOOL</div>
            <button class="viral-button">🔥 GET MY FREE ACCESS NOW! 🔥</button>
            <div class="site-url">EcoOpti.com</div>
            <div class="pin-instruction">📌 SAVE THIS PIN! Link in bio ↗️</div>
        </div>
    </div>

    <script>
        const scenes = Array.from(document.querySelectorAll('.scene'));
        const magicBtn = document.getElementById('magicBtn');
        const inputs = {
            l: document.getElementById('productL'),
            w: document.getElementById('productW'),
            h: document.getElementById('productH')
        };
        
        let currentScene = 0;

        function showScene(index) {
            scenes.forEach((scene, i) => {
                scene.classList.toggle('active', i === index);
            });
            currentScene = index;
        }

        async function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        function calculateResults() {
            // --- Fake but consistent AI logic ---
            const l = parseFloat(inputs.l.value) || 8;
            const w = parseFloat(inputs.w.value) || 8;
            const h = parseFloat(inputs.h.value) || 10;

            const productVolume = l * w * h;
            
            // Simulate a generic, non-optimized box
            const oldBoxL = Math.ceil(l * 1.5);
            const oldBoxW = Math.ceil(w * 1.8);
            const oldBoxH = Math.ceil(h * 1.5);
            const oldBoxVolume = oldBoxL * oldBoxW * oldBoxH;
            
            // Simulate the new, AI-optimized box
            const newBoxL = l + 1;
            const newBoxW = w + 1;
            const newBoxH = h + 1.5;
            const newBoxVolume = newBoxL * newBoxW * newBoxH;

            const costPerCubicCm = 0.00042; // Fictional cost factor
            const shipmentsPerYear = 5000;  // Fictional number of shipments

            const oldCost = oldBoxVolume * costPerCubicCm * shipmentsPerYear;
            const newCost = newBoxVolume * costPerCubicCm * shipmentsPerYear;
            const totalSavings = Math.round(oldCost - newCost);

            const wastedPercent = Math.round(((oldBoxVolume - productVolume) / oldBoxVolume) * 100);
            
            // --- Update the UI with personalized data ---
            document.getElementById('userSavings').textContent = `$${totalSavings.toLocaleString()}`;
            document.getElementById('cta-savings').textContent = `$${totalSavings.toLocaleString()}`;
            
            document.getElementById('oldBoxDim').textContent = `${oldBoxL}x${oldBoxW}x${oldBoxH}cm`;
            document.getElementById('newBoxDim').textContent = `${newBoxL}x${newBoxW}x${newBoxH.toFixed(1)}cm`;
            
            document.getElementById('wastedPercentage').textContent = `${wastedPercent}% WASTE`;

            // Update visualization of product inside the boxes
            const beforeViz = document.getElementById('before-product-viz');
            const afterViz = document.getElementById('after-product-viz');
            beforeViz.style.width = `${(l / oldBoxL) * 100}%`;
            beforeViz.style.height = `${(w / oldBoxW) * 100}%`;
            afterViz.style.width = `${(l / newBoxL) * 90}%`; // *90% for visual padding
            afterViz.style.height = `${(w / newBoxW) * 90}%`;
        }

        magicBtn.addEventListener('click', async () => {
            if (currentScene !== 2) return; // Only works on solution scene
            
            calculateResults();
            await sleep(200); // short delay for effect

            // Transition to transformation scene
            showScene(3);
        });

        async function runAnimationLoop() {
            while (true) {
                // Scene 1: Hook (3s)
                showScene(0);
                await sleep(3000);

                // Scene 2: Problem (3s)
                showScene(1);
                await sleep(3000);

                // Scene 3: Solution - PAUSE and wait for user interaction
                showScene(2);

                // We wait here until the user clicks the button. The event listener will advance the scene.
                // We need a way to detect when to move on.
                const waitForClick = new Promise(resolve => {
                    const listener = async () => {
                        magicBtn.removeEventListener('click', listener);
                        await sleep(3000); // Show transformation scene for 3s
                        resolve();
                    };
                    magicBtn.addEventListener('click', listener);
                });
                
                // Also add a timeout in case user is AFK
                const timeoutPromise = sleep(15000).then(() => {
                   // if user is away, just run with default values
                   if(currentScene === 2) { 
                      calculateResults();
                      showScene(3);
                   }
                });
                
                await Promise.race([waitForClick, timeoutPromise]);
                
                if (currentScene !== 3) {
                     await sleep(3000); // if timed out, ensure we wait on transformation scene
                }

                // Scene 5: CTA (4s)
                showScene(4);
                await sleep(4000);

                // Reset for next loop
                Object.values(inputs).forEach(input => input.value = '');
                await sleep(500);
            }
        }

        // Start the viral show!
        runAnimationLoop();
    </script>
</body>
</html>
